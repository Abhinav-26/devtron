openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
paths:
  /orchestrator/app/labels/list:
    get:
      summary: Returns all App Labels
      description: Returns all App Labels
      operationId: findAppLabels
      parameters: [ ]
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: array
                    description: string
                    items:
                      $ref: '#/components/schemas/AppLabels'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReponse'

  /orchestrator/app/meta/info/{appId}:
    get:
      description: application basic info, projects and labels
      operationId: app meta info
      parameters:
        - name: appId
          in: path
          description: application id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: application basic info, projects and labels
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: object
                    description: meta info project name and labels
                    $ref: '#/components/schemas/AppMetaInfoResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReponse'


  /orchestrator/app/labels:
    post:
      summary: edit AppLabels
      description: edit AppLabels api.
      operationId: editAppLabels
      requestBody:
        description: json as request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppLabelsEdit'
      responses:
        '200':
          description: AppLabels edit response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: array
                    description: string
                    $ref: '#/components/schemas/AppLabelsEdit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReponse'


# components mentioned below
components:
  schemas:
    AppLabels:
      type: object
      properties:
        id:
          type: integer
          description: app id
        label:
          type: string
          description: label, key:value

    AppMetaInfoResponse:
      type: object
      properties:
        appId:
          type: integer
          description: app id
        projectId:
          type: integer
          description: team/project id
        appName:
          type: string
          description: app name
        projectName:
          type: string
          description: team/project name
        Labels:
          type: array
          items:
            type: string
        createdOn:
          type: string
          description: app creation date
        createdBy:
          type: string
          description: app created by

    AppLabelsEdit:
      type: object
      required:
        - appId
      properties:
        appId:
          type: integer
          description: app id
        Labels:
          type: array
          items:
            type: string

    ErrorReponse:
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        status:
          type: string
          description: Error message
        errors:
          type: array
          description: errors
          items:
            $ref: '#/components/schemas/Error'

    Error:
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error internal code
        internalMessage:
          type: string
          description: Error internal message
        userMessage:
          type: string
          description: Error user message